plugins {
    id 'com.gradle.build-scan' version '1.0'
}

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}

group 'at.michael1011'
version '2.0.0-RC1'

apply plugin: 'java'

configurations {
    provided
    compile.extendsFrom provided
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

task cleanBuilds(type: Delete) {
    delete fileTree(dir: "build/libs", exclude: "")
}

task copy {
    copy {
        from "build/libs/"
        into "server1.10/plugins"
        exclude "*.war"
    }
}

repositories {
    mavenCentral()

    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }

    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots"
    }

}

dependencies {
    provided group: 'org.spigotmc', name: 'spigot-api', version: '1.10.2-R0.1-SNAPSHOT'
    provided group: 'org.bukkit', name: 'bukkit', version: '1.10.2-R0.1-SNAPSHOT'

    provided group: 'mysql', name: 'mysql-connector-java', version: '5.1.39'

    testCompile group: 'junit', name: 'junit', version: '4.11'

    testCompile group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.5'
}

jar {
    dependsOn configurations.runtime
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}
